#!/usr/bin/env node
!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=4)}([function(e,t,r){const n=r(3),o=e=>n.readFileSync(e,"utf8");e.exports={readFile:o,writeFile:(e,t="")=>n.writeFileSync(e,t,"utf8"),deleteFile:e=>n.unlinkSync(e),isFile:e=>n.statSync(e).isFile(),isDir:e=>n.statSync(e).isDirectory(),exists:e=>n.existsSync(e),mkdir:e=>n.mkdirSync(e),dirIsEmpty:e=>0===n.readdirSync(e).length,filesAreEqual:(e,t)=>o(e)===o(t)}},function(e,t){e.exports={logNewline:()=>console.log(),logStdout:e=>console.log(e),logMsg:e=>console.log(`[Oki] ${e}`),logObj:e=>console.log("[Oki]",e)}},function(e,t,r){const{exists:n,mkdir:o,readFile:i,writeFile:s}=r(0),{logMsg:c}=r(1);e.exports={buildTmpFilePath:(e,t)=>{return`${e}/tmp/oki/${t.replace(`${e}/`,"").replace(/\//g,"-")}.tmp`},addMissingTmpDir:e=>{n(`${e}/tmp`)||(o(`${e}/tmp`),c(`Created ${e}/tmp`)),n(`${e}/tmp/oki`)||(o(`${e}/tmp/oki`),c(`Created ${e}/tmp/oki`))},addMissingTmpFiles:(e,t)=>{t.forEach(e=>{const{checks:t}=e;t.forEach(({tmpPath:e,fullPath:t})=>{e&&!n(e)&&(s(e,""),c(`Created ${e} as a dump of ${t}`))})})},updateTmpFiles:e=>{e.forEach(e=>{const{fullPath:t,tmpPath:r,meta:n}=e;!n.isDir&&n.exists&&(s(r,i(t)),c(`Updated ${r} according with ${t}`))})}}},function(e,t){e.exports=require("fs")},function(e,t,r){e.exports=r(5)},function(e,t,r){const{validateArgs:n}=r(6),{validateConfig:o}=r(7),{readFile:i}=r(0),{addMissingTmpDir:s,addMissingTmpFiles:c}=r(2),{enrichCommands:a}=r(8),{performChecks:l}=r(9),{performCommands:u}=r(10),{watchBlockFile:d,blockContainers:p,unblockContainers:f}=r(12),{logMsg:m,logNewline:g}=r(1),h=r(13);(()=>{n(process.argv);const e=(e=>{const t=e[0],r="--installed"===t;return{installedCheck:r,configPath:!r&&t}})(process.argv.slice(2));e.installedCheck&&(console.log("true"),process.exit(0)),o(e.configPath);const t={...h,...JSON.parse(i(e.configPath))},{commands:r,masterPackage:k,packageNameKey:y,projectRoot:x}=t,w=process.env[y],b=a(x,r);if((e=>{try{return 0===l(e).length}catch(e){return!1}})(b)&&process.exit(0),k&&w!==k)return void d(x);s(x),k&&p(x),c(x,b),g();const F=l(b);F.length>0&&u(F),m("Everything is up to date!"),k&&f(x)})()},function(e,t){e.exports={validateArgs:e=>{if(3!==e.length)throw new Error("Please, pass config: oki {config_file_path}")}}},function(e,t,r){const{readFile:n,isFile:o,exists:i}=r(0);e.exports={validateConfig:e=>{if(!i(e))throw new Error(`Passed config does not exist: ${e}`);if(!o(e))throw new Error(`Passed config is not a file: ${e}`);if(!(e=>{try{return n(e),!0}catch(e){return!1}})(e))throw new Error("Passed config is not readable");if(!(e=>{try{return JSON.parse(n(e)),!0}catch(e){return!1}})(e))throw new Error("Passed config is not a valid JSON")}}},function(e,t,r){const{buildTmpFilePath:n}=r(2),{isFile:o,isDir:i,exists:s}=r(0),c=e=>{const t=s(e);return{exists:t,isFile:t&&o(e),isDir:t&&i(e)}},a=(e,t)=>{const r=`${e}/${t.path}`,o={...c(r),...t.meta},i=o.isDir?null:n(e,t.path);return{...t,fullPath:r,tmpPath:i,meta:o}},l=(e,t)=>t?[a(e,{path:"package.json",trigger:"diff",meta:{isFile:!0}})]:[],u=(e,t)=>t?[a(e,{path:"node_modules",trigger:"empty",meta:{isDir:!0}})]:[],d=(e,t)=>t?t.reduce((t,r)=>[...t,a(e,{path:`${r}/package.json`,trigger:"diff"})],[]):[],p=(e,t)=>t?t.map(t=>a(e,t)):[];e.exports={enrichCommands:(e,t)=>t.map(t=>{const{command:r,packages:n,checks:o,checkRootNodeModules:i,checkRootPackageJson:s}=t;return{command:r,checks:[...l(e,s),...u(e,i),...d(e,n),...p(e,o)]}})}},function(e,t,r){const{filesAreEqual:n,dirIsEmpty:o}=r(0),i=e=>{const{trigger:t,fullPath:r,tmpPath:i,meta:s}=e;switch(t){case"diff":return!s.exists||!n(r,i);case"empty":return!s.exists||o(r);default:return!1}};e.exports={performChecks:e=>e.reduce((e,t)=>{const{checks:r,command:n}=t,o=r.map(e=>({...e,isDirty:i(e)})).filter(({isDirty:e})=>e);return 0===o.length?e:[...e,{command:n,dirtyChecks:o}]},[])}},function(e,t,r){const{execSync:n}=r(11),{updateTmpFiles:o}=r(2),{logMsg:i,logNewline:s,logStdout:c}=r(1),a=e=>{const{trigger:t,fullPath:r}=e;switch(t){case"diff":return`- ${r} was changed`;case"empty":return`- ${r} is empty or not exists`;default:return!1}};e.exports={performCommands:e=>{e.forEach(e=>{const{command:t,dirtyChecks:r}=e,c=(e=>e.map(a).join("\n"))(r);i(`Running ${t}, because:\n${c}\n`);try{n(t,{encoding:"utf8",stdio:["pipe","pipe","pipe"]})}catch(e){throw i(`Failed to run ${t}`),e}o(r),s()})}}},function(e,t){e.exports=require("child_process")},function(e,t,r){const n=r(3),{logMsg:o}=r(1),{writeFile:i,deleteFile:s}=r(0),c="Container is blocked (by master container), waiting for unblock",a="Container is unblocked, continue",l="Block other containers",u="Unblock other containers",d=e=>e.isFile()&&0!==e.birthtimeMs,p=e=>`${e}/tmp/oki/.blocked`,f=(e,t)=>{o(t),n.unwatchFile(e),process.exit(0)};e.exports={watchBlockFile:e=>{const t=p(e);let r=-1,i=null;const s=()=>{clearTimeout(i)};o(c),n.watchFile(t,{interval:1e3},(e,n)=>{if(r++,!((e,t)=>d(e)&&d(t))(e,n)&&!((e,t)=>d(e)&&!d(t))(e,n))return((e,t)=>!d(e)&&d(t))(e,n)?(s(),void f(t,a)):void(0===r&&((e,t)=>!d(e)&&!d(t))(e,n)?i=setTimeout(()=>f(t,a),1e4):o("Something went wrong, try to restart docker-compose"));s()})},blockContainers:e=>{const t=p(e);i(t),o(l)},unblockContainers:e=>{const t=p(e);s(t),o(u)}}},function(e,t){e.exports={packageNameKey:"OKI_PACKAGE_NAME",masterPackage:null}}]);